Python网络编程总结

一、tcp和udp的主要区别
tcp是面向连接的通信（可靠传输）。
udp不是面向连接的通信（不可靠传输：会丢包）。

二、网络编程的一般流程：
tcp客户端：
01-socket                   创建套接字
02-connect                  链接服务器
03-send/recv                发送/接收信息
04-close                    关闭套接字

tcp服务器端：
01-socket                   创建套接字
02-bind                     绑定本地IP和PORT
03-listen                   将本地套接字转换为被动模式
04-accept                   等待客户端连接
05-send/recv                发送/接收信息
06-close                    关闭套接字

udp:
01-socket                   创建套接字
02-bind                     绑定对方IP和PORT（sendto时不用，recvfrom必须使用）
03-sendto/recvfrom          发送/接收信息
04-close                    关闭套接字


三、tcp注意点
1、tcp服务器一般情况下都需要绑定，否则客户端找不到这个服务器
2、tcp客户端一般不绑定，因为是主动链接服务器，所以只要确定好服务器的ip、port等信息就好，本地客户端可以随机
3、tcp服务器中通过listen可以将socket创建出来的主动套接字变为被动的，这是做tcp服务器时必须要做的
4、当客户端需要链接服务器时，就需要使用connect进行链接，udp是不需要链接的而是直接发送，但是tcp必须先链接，只有链接成功才能通信
5、当一个tcp客户端连接服务器时，服务器端会有1个新的套接字，这个套接字用来标记这个客户端，单独为这个客户端服务
6、listen后的套接字是被动套接字，用来接收新的客户端的链接请求的，而accept返回的新套接字是标记这个新客户端的
7、关闭listen后的套接字意味着被动套接字关闭了，会导致新的客户端不能够链接服务器，但是之前已经链接成功的客户端正常通信。
8、关闭accept返回的套接字意味着这个客户端已经服务完毕
9、当客户端的套接字调用close后，服务器端会recv解堵塞，并且返回的长度为0，因此服务器可以通过返回数据的长度来区别客户端是否已经下线